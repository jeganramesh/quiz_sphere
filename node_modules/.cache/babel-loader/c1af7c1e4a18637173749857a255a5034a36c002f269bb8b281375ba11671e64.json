{"ast":null,"code":"var _jsxFileName = \"/home/jegan/Desktop/app/quizsphere_web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n// Make sure to install the 'marked' library: npm install marked\nimport { marked } from 'marked';\n\n// Placeholder for API URL. In a real app, use environment variables.\n// For local development, you can set this to your machine's local IP address.\n// Example: const API_URL = \"http://192.168.1.100:8000\";\n// Or, if running the backend on the same machine as the frontend, you might use \"http://localhost:8000\"\n// If your API requires an API key, ensure it's set via REACT_APP_API_KEY environment variable and passed correctly.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://192.168.1.8:8000/chat\"; // Default to the provided IP, but allow override via environment variable\n\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hi there! Welcome to Quiz Sphere! Ready to test your knowledge and learn something new? Let's get quizzing! What subject are you interested in exploring today?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isGameView, setIsGameView] = useState(false); // State to manage view: chat or game\n  const chatBoxRef = useRef(null);\n\n  // Function to scroll to the bottom of the chat box\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages, isGameView]); // Re-scroll if view changes\n\n  // Function to handle clicking the game icon\n  const handleGameIconClick = () => {\n    setIsGameView(true);\n  };\n\n  // Function to handle clicking the back button\n  const handleBackButtonClick = () => {\n    setIsGameView(false);\n  };\n\n  // Function to call the backend API\n  async function callBackendApi(prompt) {\n    try {\n      // The original code included '?key=${API_KEY}' which might be incorrect if API_KEY is not a valid key or if the backend doesn't expect it as a query parameter.\n      // If your backend requires an API key, you might need to adjust this fetch call, e.g., by adding it to headers or as a different query parameter.\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // If an API key is required, you might add it here:\n          // \"Authorization\": `Bearer ${process.env.REACT_APP_API_KEY}`\n        },\n        body: JSON.stringify({\n          message: prompt,\n          user_id: \"react_user\"\n        }) // Updated body to match the provided snippet\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Adjust the parsing logic based on your backend's actual response structure.\n        // The original structure was based on Gemini API.\n        // Assuming the backend now returns a simple JSON like { \"response\": \"...\" }\n        if (data && data.response) {\n          return data.response;\n        } else {\n          console.error(\"Unexpected API response structure:\", data);\n          return \"Sorry, I received an unexpected response from the API.\";\n        }\n      } else {\n        console.error(\"Error with API:\", response.statusText);\n        return `Sorry, there was an error with the API. Status: ${response.status}`;\n      }\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n      return \"Sorry, there was a network error.\";\n    }\n  }\n\n  // Function to handle sending a message\n  const sendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const newUserMessage = {\n      id: Date.now(),\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setInput(\"\"); // Clear input field\n\n    // Call backend API and display bot response\n    const botResponseText = await callBackendApi(input);\n    const newBotMessage = {\n      id: Date.now() + 1,\n      // Ensure unique ID\n      text: botResponseText,\n      sender: \"bot\"\n    };\n    setMessages(prevMessages => [...prevMessages, newBotMessage]);\n  };\n\n  // Handle Enter key press for sending message\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: isGameView && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackButtonClick,\n          className: \"header-button back-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-arrow-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isGameView ? \"Game\" : \"Quiz Sphere Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: !isGameView && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGameIconClick,\n          className: \"header-button game-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-gamepad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), isGameView ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is where the game will be played.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.sender}-message`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${message.sender}-avatar`,\n          children: message.sender === \"bot\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-robot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: message.sender === \"bot\" ? marked.parse(message.text) : message.text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), !isGameView && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userInput\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aF7ZMnm2gU8UiEOmv3LDv32xIz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","marked","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","messages","setMessages","id","text","sender","input","setInput","isGameView","setIsGameView","chatBoxRef","current","scrollTop","scrollHeight","handleGameIconClick","handleBackButtonClick","callBackendApi","prompt","response","fetch","method","headers","body","JSON","stringify","message","user_id","ok","data","json","console","error","statusText","status","sendMessage","trim","newUserMessage","Date","now","prevMessages","botResponseText","newBotMessage","handleKeyPress","event","key","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","dangerouslySetInnerHTML","__html","parse","type","placeholder","value","onChange","e","target","onKeyPress","_c","$RefreshReg$"],"sources":["/home/jegan/Desktop/app/quizsphere_web/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n// Make sure to install the 'marked' library: npm install marked\nimport { marked } from 'marked';\n\n// Placeholder for API URL. In a real app, use environment variables.\n// For local development, you can set this to your machine's local IP address.\n// Example: const API_URL = \"http://192.168.1.100:8000\";\n// Or, if running the backend on the same machine as the frontend, you might use \"http://localhost:8000\"\n// If your API requires an API key, ensure it's set via REACT_APP_API_KEY environment variable and passed correctly.\nconst API_URL = process.env.REACT_APP_API_URL || \"http://192.168.1.8:8000/chat\"; // Default to the provided IP, but allow override via environment variable\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Hi there! Welcome to Quiz Sphere! Ready to test your knowledge and learn something new? Let's get quizzing! What subject are you interested in exploring today?\",\n      sender: \"bot\"\n    }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isGameView, setIsGameView] = useState(false); // State to manage view: chat or game\n  const chatBoxRef = useRef(null);\n\n  // Function to scroll to the bottom of the chat box\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages, isGameView]); // Re-scroll if view changes\n\n  // Function to handle clicking the game icon\n  const handleGameIconClick = () => {\n    setIsGameView(true);\n  };\n\n  // Function to handle clicking the back button\n  const handleBackButtonClick = () => {\n    setIsGameView(false);\n  };\n\n  // Function to call the backend API\n  async function callBackendApi(prompt) {\n    try {\n      // The original code included '?key=${API_KEY}' which might be incorrect if API_KEY is not a valid key or if the backend doesn't expect it as a query parameter.\n      // If your backend requires an API key, you might need to adjust this fetch call, e.g., by adding it to headers or as a different query parameter.\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // If an API key is required, you might add it here:\n          // \"Authorization\": `Bearer ${process.env.REACT_APP_API_KEY}`\n        },\n        body: JSON.stringify({ message: prompt, user_id: \"react_user\" }), // Updated body to match the provided snippet\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        // Adjust the parsing logic based on your backend's actual response structure.\n        // The original structure was based on Gemini API.\n        // Assuming the backend now returns a simple JSON like { \"response\": \"...\" }\n        if (data && data.response) {\n          return data.response;\n        } else {\n          console.error(\"Unexpected API response structure:\", data);\n          return \"Sorry, I received an unexpected response from the API.\";\n        }\n      } else {\n        console.error(\"Error with API:\", response.statusText);\n        return `Sorry, there was an error with the API. Status: ${response.status}`;\n      }\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n      return \"Sorry, there was a network error.\";\n    }\n  }\n\n  // Function to handle sending a message\n  const sendMessage = async () => {\n    if (input.trim() === \"\") return;\n\n    const newUserMessage = {\n      id: Date.now(),\n      text: input,\n      sender: \"user\"\n    };\n\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setInput(\"\"); // Clear input field\n\n    // Call backend API and display bot response\n    const botResponseText = await callBackendApi(input);\n    const newBotMessage = {\n      id: Date.now() + 1, // Ensure unique ID\n      text: botResponseText,\n      sender: \"bot\"\n    };\n    setMessages(prevMessages => [...prevMessages, newBotMessage]);\n  };\n\n  // Handle Enter key press for sending message\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <div className=\"header-left\">\n          {isGameView && (\n            <button onClick={handleBackButtonClick} className=\"header-button back-button\">\n              <i className=\"fas fa-arrow-left\"></i>\n            </button>\n          )}\n        </div>\n        <div className=\"header-center\">\n          <h2>{isGameView ? \"Game\" : \"Quiz Sphere Chat\"}</h2>\n        </div>\n        <div className=\"header-right\">\n          {!isGameView && (\n            <button onClick={handleGameIconClick} className=\"header-button game-button\">\n              <i className=\"fas fa-gamepad\"></i>\n            </button>\n          )}\n        </div>\n      </div>\n      {isGameView ? (\n        <div className=\"game-container\">\n          {/* Placeholder for the game content */}\n          <h1>Game Area</h1>\n          <p>This is where the game will be played.</p>\n          {/* You would integrate your game logic here */}\n        </div>\n      ) : (\n        <div className=\"chat-box\" ref={chatBoxRef}>\n          {messages.map(message => (\n            <div key={message.id} className={`chat-message ${message.sender}-message`}>\n              <div className={`avatar ${message.sender}-avatar`}>\n                {message.sender === \"bot\" ? <i className=\"fas fa-robot\"></i> : <i className=\"fas fa-user\"></i>}\n              </div>\n              {/* Render markdown for bot messages */}\n              <p dangerouslySetInnerHTML={{ __html: message.sender === \"bot\" ? marked.parse(message.text) : message.text }} />\n            </div>\n          ))}\n        </div>\n      )}\n      {!isGameView && (\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            id=\"userInput\"\n            placeholder=\"Type your message...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button onClick={sendMessage}>\n            <i className=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}